import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {FormEvent, useCallback, useEffect, useState} from "react";
import {DefaultResponseType, TodoType} from "../types/types";

const API = "/api/todos";

let lastTimer:NodeJS.Timer = 0 as any;

const Home: NextPage = () => {
  const [message, setMessage] = useState("");
  const [todo, setTodo] = useState<TodoType>({ id: 0, name: "", checked: false });
  const [todos, setTodos] = useState<TodoType[]>([]);

  const loadTodos = useCallback(async () => {
    const resp = await fetch(API, {
      method: "GET"
    });
    setTodos(await resp.json() as unknown as TodoType[]);
  }, []);

  useEffect(() => {
    loadTodos();
  }, [loadTodos]);

  const showRespMsg = async (resp: Response) => {
    const { message } = (await resp.json()) as unknown as DefaultResponseType;
    setMessage(message);

    clearTimeout(lastTimer);
    lastTimer = setTimeout(() => {
      setMessage("")
    }, 3000);
  }

  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const resp = await fetch(API, {
      method: "POST",
      body: JSON.stringify(todo),
    });
    showRespMsg(resp);
    await loadTodos();
  };

  const onDelete = async (todoId: number) => {
    const resp = await fetch(`${API}?id=${todoId}`, {
      method: "DELETE",
    });
    showRespMsg(resp);
    await loadTodos();
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h4>{message}</h4>
        <br />
        <form onSubmit={onSubmit}>
          <input type="text" onChange={(e) => setTodo((prevState) => ({ ...prevState, name: e.target.value }))} />
          <input type="checkbox" onChange={(e) => setTodo((prevState) => ({ ...prevState, checked: e.target.checked }))} />
          <button>Add Todo</button>
          <br />
          <div>
            <ul>
              {todos.map((todo) => (
                <li key={todo.id}>
                  <button type="button" onClick={() => onDelete(todo.id)}>&#9932;</button>
                  &nbsp;
                  {todo.name}
                  &nbsp;
                  <input type="checkbox" checked={todo.checked} />
                </li>
              ))}
            </ul>
          </div>
        </form>
      </main>
    </div>
  )
}

export default Home
